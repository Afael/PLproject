/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CtrNewForm;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.MySQLConn;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Jajang Jaenal Yusup
 */
public class RPLaporan extends javax.swing.JInternalFrame {

    Connection conn = null;
    PreparedStatement ps = null;
    Statement state = null;
    ResultSet rs = null;
    XSSFWorkbook wb;

    /**
     * Creates new form CetakHasilTest
     */
    public RPLaporan() {
        initComponents();
        setTitle("Pertamina Lubricants | Report Test");
        isiComboBox();
        CtrNewForm cn = new CtrNewForm();
        sampleTable.setModel(cn.getModelLaporanMwh(mwhComboBox.getSelectedItem().toString()));
        rptTypeLabel.setVisible(false);
        typeFileComboBox.setVisible(false);
    }

    private void isiComboBox() {
        mwhComboBox.removeAllItems();
        String sNoMWH = "";
        try {
            conn = MySQLConn.getKoneksi();
            state = conn.createStatement();
            String query = "SELECT * FROM mwh";

            rs = state.executeQuery(query);
            while (rs.next()) {

                sNoMWH = rs.getString("no_MWh");
                mwhComboBox.addItem(sNoMWH);

            }
            if (sNoMWH.isEmpty()) {
                mwhComboBox.addItem("Tidak ada data");
            }
            rs.close();
            state.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sampleTable = new javax.swing.JTable();
        noMWHTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnCetak = new javax.swing.JButton();
        mwhComboBox = new javax.swing.JComboBox<>();
        rptTypeLabel = new javax.swing.JLabel();
        typeFileComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        sampleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(sampleTable);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("No Ref Permintaan Test (MWH)");

        jPanel8.setBackground(new java.awt.Color(255, 255, 102));

        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Form ini digunakan untukmencetak hasil test");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Cetak Hasil Test");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        btnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/export.png"))); // NOI18N
        btnCetak.setText("Export");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        jPanel6.add(btnCetak);

        mwhComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mwhComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                mwhComboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        rptTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rptTypeLabel.setText("Report Type File");

        typeFileComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".pdf", ".xls" }));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Cari No. MWH");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mwhComboBox, 0, 169, Short.MAX_VALUE)
                            .addComponent(noMWHTextField))
                        .addGap(53, 53, 53)
                        .addComponent(rptTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mwhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rptTypeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noMWHTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:
        try {
            String typeFile = typeFileComboBox.getSelectedItem().toString();

            MySQLConn koneksi = new MySQLConn();

            JasperDesign jasperDesign = JRXmlLoader.load(RPLaporan.class.getResourceAsStream("/reports/RptHasilUji.jrxml"));
            HashMap param = new HashMap();
            //Mengambil parameter dari ireport

            String cbMwh = mwhComboBox.getSelectedItem().toString();
            String txtMwh = noMWHTextField.getText();
            if (txtMwh.equals("")) {
                param.put("NoMWH", cbMwh);
            } else {
                param.put("NoMWH", txtMwh);
            }
            //param.put("NoMWH", txtMwh);
            if (typeFile.equals(".pdf")) {
                JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, param, koneksi.getConnection());
                JasperViewer.viewReport(jasperPrint, false);
            } else if (typeFile.equals(".xls")) {
                //exportToExcell();

                try {
                    koneksi = new MySQLConn();
                    
                    String querySample = "SELECT sample"
                            + ", s.no_MWH"
                            + ", s.visual"
                            + ", s.cavity_btl"
                            + ", s.berat_btl"
                            + ", s.tinggi_btl"
                            + ", s.torsi_cap"
                            + ", s.berat_cap"
                            + ", s.tinggi_cap"
                            + ", s.drop_test"
                            + ", s.uji_volume"
                            + ", s.tgl_test"
                            + ", u.namalengkap"
                            + ", s.pemeriksa "
                            + "  FROM sample s"
                            + "  INNER JOIN user AS u"
                            + "     ON u.id_user = s.id_user"
                            + "  WHERE s.no_MWH = ?";

                    String query = "SELECT Count"
                            + " , no_MWH"
                            + " , m.no_form"
                            + " , p.nama_pemasok"
                            + " , m.no_surat_jalan"
                            + " , m.tgl_MWH"
                            + " , m.warna"
                            + " , m.jmlh_pengiriman"
                            + " , m.jmlh_di_test"
                            + " , m.jenis_barang"
                            + " , m.ukuran "
                            + " FROM mwh AS m"
                            + " INNER JOIN pemasok AS p"
                            + "     ON p.id_pemasok = m.id_pemasok";

                    ps = koneksi.connect(querySample);
                    ps.setString(1, mwhComboBox.getSelectedItem().toString());
                    rs = ps.executeQuery();

                    wb = new XSSFWorkbook();
                    XSSFSheet sheet = wb.createSheet("Sample Test Detail");
                    XSSFRow header = sheet.createRow(0);
                    //Custome Style
                    CellStyle style = wb.createCellStyle();
                    style.setFillForegroundColor(IndexedColors.GREY_40_PERCENT.getIndex());
                    style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
                    style.setAlignment(HorizontalAlignment.CENTER);
                    Font font = wb.createFont();
                    font.setColor(IndexedColors.WHITE.getIndex());
                    style.setFont(font);

                    //Custome Header Style
                    Cell cellSampleke = header.createCell(0);
                    cellSampleke.setCellValue("Sample ke");
                    cellSampleke.setCellStyle(style);
                    Cell cellMWH = header.createCell(1);
                    cellMWH.setCellValue("No MWH");
                    cellMWH.setCellStyle(style);
                    Cell cellVisual = header.createCell(2);
                    cellVisual.setCellValue("Visual");
                    cellVisual.setCellStyle(style);
                    Cell cellCavity= header.createCell(3);
                    cellCavity.setCellValue("Cavity");
                    cellCavity.setCellStyle(style);
                    Cell cellBeratBotol = header.createCell(4);
                    cellBeratBotol.setCellValue("Berat Botol");
                    cellBeratBotol.setCellStyle(style);
                    Cell cellTinggiBotol = header.createCell(5);
                    cellTinggiBotol.setCellValue("Tinggi Botol");
                    cellTinggiBotol.setCellStyle(style);
                    Cell cellTorsi = header.createCell(6);
                    cellTorsi.setCellValue("Torsi");
                    cellTorsi.setCellStyle(style);
                    Cell cellBeratCapper = header.createCell(7);
                    cellBeratCapper.setCellValue("Berat Capper");
                    cellBeratCapper.setCellStyle(style);
                    Cell cellTinggiCapper = header.createCell(8);
                    cellTinggiCapper.setCellValue("Tinggi Capper");
                    cellTinggiCapper.setCellStyle(style);
                    Cell cellDropTest = header.createCell(9);
                    cellDropTest.setCellValue("Drop Test");
                    cellDropTest.setCellStyle(style);
                    Cell cellUjiVolume = header.createCell(10);
                    cellUjiVolume.setCellValue("Uji Volume");
                    cellUjiVolume.setCellStyle(style);
                    Cell cellTanggal = header.createCell(11);
                    cellTanggal.setCellValue("Tanggal Uji");
                    cellTanggal.setCellStyle(style);
                    Cell cellPenguji = header.createCell(12);
                    cellPenguji.setCellValue("Penguji");
                    cellPenguji.setCellStyle(style);
                    Cell cellPemeriksa = header.createCell(13);
                    cellPemeriksa.setCellValue("Pemeriksa");
                    cellPemeriksa.setCellStyle(style);

                    //Custome Cells Column width
                    sheet.autoSizeColumn(0);
                    sheet.autoSizeColumn(1);
                    sheet.setColumnWidth(2, 256 * 15);
                    sheet.autoSizeColumn(3);
                    sheet.autoSizeColumn(4);
                    sheet.autoSizeColumn(5);
                    sheet.autoSizeColumn(6);
                    sheet.autoSizeColumn(7);
                    sheet.autoSizeColumn(8);
                    sheet.autoSizeColumn(9);
                    sheet.autoSizeColumn(10);
                    sheet.autoSizeColumn(11);
                    sheet.setColumnWidth(12, 256 * 15);
                    sheet.setColumnWidth(13, 256 * 15);

                    File sv;

                    JFileChooser chooser = new JFileChooser();
                    int returnVal = chooser.showSaveDialog(null);
                    if (returnVal == JFileChooser.APPROVE_OPTION) {
                        sv = chooser.getSelectedFile();
                    } else {
                        // no file has been chosen
                        return;
                    }

                    int index = 1;
                    while (rs.next()) {
                        XSSFRow row = sheet.createRow(index);
                        row.createCell(0).setCellValue(rs.getString("s.sample"));
                        row.createCell(1).setCellValue(rs.getString("s.no_MWH"));
                        row.createCell(2).setCellValue(rs.getString("s.visual"));
                        row.createCell(3).setCellValue(rs.getString("s.cavity_btl"));
                        row.createCell(4).setCellValue(rs.getString("s.berat_btl"));
                        row.createCell(5).setCellValue(rs.getString("s.tinggi_btl"));
                        row.createCell(6).setCellValue(rs.getString("s.torsi_cap"));
                        row.createCell(7).setCellValue(rs.getString("s.berat_cap"));
                        row.createCell(8).setCellValue(rs.getString("s.tinggi_cap"));
                        row.createCell(9).setCellValue(rs.getString("s.drop_test"));
                        row.createCell(10).setCellValue(rs.getString("s.uji_volume"));
                        row.createCell(11).setCellValue(rs.getString("s.tgl_test"));
                        row.createCell(12).setCellValue(rs.getString("u.namalengkap"));
                        row.createCell(13).setCellValue(rs.getString("s.pemeriksa"));
                        index++;
                    }
                    try (FileOutputStream fileOut = new FileOutputStream(sv)) {
                        wb.write(fileOut);
                    }

                } catch (SQLException | FileNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                } finally {
                    if (ps != null) {
                        try {
                            ps.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(RPLaporan.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    if (rs != null) {
                        try {
                            rs.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(RPLaporan.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }

        } catch (JRException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void mwhComboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_mwhComboBoxPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        CtrNewForm cn = new CtrNewForm();
        String snomwh = mwhComboBox.getSelectedItem().toString();
        sampleTable.setModel(cn.getModelLaporanMwh(snomwh));
    }//GEN-LAST:event_mwhComboBoxPopupMenuWillBecomeInvisible

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> mwhComboBox;
    private javax.swing.JTextField noMWHTextField;
    private javax.swing.JLabel rptTypeLabel;
    private javax.swing.JTable sampleTable;
    private javax.swing.JComboBox<String> typeFileComboBox;
    // End of variables declaration//GEN-END:variables
}
